*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 




 OOO   PPPP   EEEEE  RRRR    AAA   TTTTT   OOO   RRRR 
O   O  P   P  E      R   R  A   A    T    O   O  R   R
O   O  P   P  E      R   R  A   A    T    O   O  R   R
O   O  PPPP   EEEE   RRRR   A   A    T    O   O  RRRR 
O   O  P      E      R R    AAAAA    T    O   O  R R  
O   O  P      E      R  R   A   A    T    O   O  R  R 
 OOO   P      EEEEE  R   R  A   A    T     OOO   R   R




*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 




00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011111111112222222222333333333344444444445555555555666666666677777777778
12345678901234567890123456789012345678901234567890123456789012345678901234567890
*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 




 OOO   PPPP   EEEEE  RRRR    AAA   TTTTT   OOO   RRRR 
O   O  P   P  E      R   R  A   A    T    O   O  R   R
O   O  P   P  E      R   R  A   A    T    O   O  R   R
O   O  PPPP   EEEE   RRRR   A   A    T    O   O  RRRR 
O   O  P      E      R R    AAAAA    T    O   O  R R  
O   O  P      E      R  R   A   A    T    O   O  R  R 
 OOO   P      EEEEE  R   R  A   A    T     OOO   R   R




*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 




00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011111111112222222222333333333344444444445555555555666666666677777777778
12345678901234567890123456789012345678901234567890123456789012345678901234567890
  CCCCCCCC      OOOOOO      BBBBBBBB        OOOOOO      LL        
  CCCCCCCC      OOOOOO      BBBBBBBB        OOOOOO      LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BBBBBBBB      OO      OO    LL        
CC            OO      OO    BBBBBBBB      OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
  CCCCCCCC      OOOOOO      BBBBBBBB        OOOOOO      LLLLLLLLLL
  CCCCCCCC      OOOOOO      BBBBBBBB        OOOOOO      LLLLLLLLLL




  IIIIII      NN      NN      SSSSSSSS
  IIIIII      NN      NN      SSSSSSSS
    II        NN      NN    SS        
    II        NN      NN    SS        
    II        NNNN    NN    SS        
    II        NNNN    NN    SS        
    II        NN  NN  NN      SSSSSS  
    II        NN  NN  NN      SSSSSS  
    II        NN    NNNN            SS
    II        NN    NNNN            SS
    II        NN      NN            SS
    II        NN      NN            SS
  IIIIII      NN      NN    SSSSSSSS  
  IIIIII      NN      NN    SSSSSSSS  




*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 
File DSKB:COBOL.INS[1,2], created: 14-Jul-81 15:46:59,
        printed: 14-Oct-99 12:05:36
Output to device LPT000 unit type LP05 
Job parameters: Request created:14-Oct-99 12:04:44   Page limit:42
          Forms:NORMAL  Account:
File parameters: Copy: 1 of 1   Spacing:SINGLE
          File format:ASCII   Print mode:ASCII
  CCCCCCCC      OOOOOO      BBBBBBBB        OOOOOO      LL        
  CCCCCCCC      OOOOOO      BBBBBBBB        OOOOOO      LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BBBBBBBB      OO      OO    LL        
CC            OO      OO    BBBBBBBB      OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
CC            OO      OO    BB      BB    OO      OO    LL        
  CCCCCCCC      OOOOOO      BBBBBBBB        OOOOOO      LLLLLLLLLL
  CCCCCCCC      OOOOOO      BBBBBBBB        OOOOOO      LLLLLLLLLL




  IIIIII      NN      NN      SSSSSSSS
  IIIIII      NN      NN      SSSSSSSS
    II        NN      NN    SS        
    II        NN      NN    SS        
    II        NNNN    NN    SS        
    II        NNNN    NN    SS        
    II        NN  NN  NN      SSSSSS  
    II        NN  NN  NN      SSSSSS  
    II        NN    NNNN            SS
    II        NN    NNNN            SS
    II        NN      NN            SS
    II        NN      NN            SS
  IIIIII      NN      NN    SSSSSSSS  
  IIIIII      NN      NN    SSSSSSSS  




*START* Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 
File DSKB:COBOL.INS[1,2], created: 14-Jul-81 15:46:59,
        printed: 14-Oct-99 12:05:36
Output to device LPT000 unit type LP05 
Job parameters: Request created:14-Oct-99 12:04:44   Page limit:42
          Forms:NORMAL  Account:
File parameters: Copy: 1 of 1   Spacing:SINGLE
          File format:ASCII   Print mode:ASCII



COBOL.INS -- Installation Guide for COBOL-68/74 V12B on TOPS-10






























COPYRIGHT (C) 1981 BY
DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.


THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
TRANSFERRED.

THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
CORPORATION.

DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                 Page 2












                    CONTENTS
                    --------

CHAPTER   1         INTRODUCTION

CHAPTER   2         CONTENTS OF DISTRIBUTION TAPE

CHAPTER   3         SYSTEM INSTALLATION
          3.1       System Verification (UETP)

CHAPTER   4         SYSTEM REBUILDING
          4.1       Required System Software
          4.2       Standard Configuration
          4.3       Non-Standard Configurations
          4.3.1     DBMS-10
          4.3.2     SORT
          4.3.3     User OTS Routines
          4.3.4     MCS-10
          4.3.5     KI-10 Processor
          4.3.6     Single Segment Compiler
          4.3.7     Shareable RMS and OTS

CHAPTER   5         COMPATIBILITY OF COBOL-68 AND COBOL-74

CHAPTER   6         COBOL-68 TO COBOL-74 CONVERSION UTILITY
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                 Page 3


1.0  INTRODUCTION

This document describes procedures for building  and  installation  of
all  supported COBOL-68/74 system configurations.  It assumes that the
installation is licensed for COBOL-68, COBOL-74, and SORT.  If this is
not  true  then  the  instructions will still be valid but the certain
save sets will be empty and certain files will  be  missing  from  the
first save set.  See sections 2 and 3 for more details.

The distributed compilers are prepared to support DBMS-10 and  MCS-10,
however, they run perfectly well without them.  The only difference is
that the DBMS-10 and MCS-10 reserved words are always active under the
version  12B standard configuration.  This was done to simplify adding
of DBMS-10 and MCS-10 to user systems, and to  simplify  and  increase
the  reliability  of  packaging  and  installation  procedures.   Most
configurations can be generated simply by reloading  portions  of  the
system.   System  installation of the distributed configuration can be
accomplished by simply  copying  a  set  of  files  according  to  the
instructions in Section 3.

Note, additional work must be done to the OTSs to support DBMS-10  and
MCS-10.   This  is  described  in the appropriate set of procedures in
Section 4.

In order to obtain a configuration other than that distributed, all or
part  of  the  COBOL-68/74  system must be rebuilt before installation
according to the appropriate set of procedures in Section 4.

NOTE, look carefully at the beware files, CBL12B.BWR and SRT4C.BWR and
apply all necessary patches, also read CBL12B.DOC and SRT4C.DOC.

Please  read  this  guide  fully  before  attempting  to  rebuild  the
COBOL-68/74  system.   Rebuilding  should  not be necessary unless you
want to change the feature test switch settings or have local  patches
to install.

If you wish to rebuild all or part of  COBOL  then  the  supplied  CTL
files can be used without modification provided that certain rules are
obeyed.  See Section 4.0 for more details.
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                 Page 4


2.0  CONTENTS OF THE DISTRIBUTION TAPE

This distribution tape is written  in  BACKUP  INTERCHANGE  format  at
either  1600  or 800 BPI and contains the complete COBOL-68/74 system.
There are eleven save sets.  If any save sets are empty then  you  are
not licensed to receive their contents.

The save sets are:

           1.  DOCUMENTATION
           2.  COBOL-SOURCE
           3.  SORT-SOURCE
           4.  COBOL-68-KL-BUILD
           5.  COBOL-68-KI-BUILD
           6.  COBOL-74-KL-BUILD
           7.  COBOL-74-KI-BUILD
           8.  SORT-KL-BUILD
           9.  SORT-KI-BUILD
          10.  CONVERSION-UTILITY
          11.  UETP-DIRECTORY

The DOCUMENTATION save set contains the following files:

          COBOL.INS  -- this file
          COBOL.SD   -- directory of COBOL-SOURCE save set
          SORT.SD    -- directory of SORT-SOURCE save set
          COBOL.6LD  -- directory of COBOL-68-KL-BUILD save set
          COBOL.6ID  -- directory of COBOL-68-KI-BUILD save set
          COBOL.7LD  -- directory of COBOL-74-KL-BUILD save set
          COBOL.7ID  -- directory of COBOL-74-KI-BUILD save set
          SORT.KLD   -- directory of SORT-KL-BUILD save set
          SORT.KID   -- directory of SORT-KI-BUILD save set
          68274.DIR  -- directory of the CONVERSION-UTILITY save set
          COBOL.UTD  -- directory of the UETP-DIRECTORY save set
          CBL12B.BWR -- the Beware file for COBOL-68/74 12B
          CBL12B.DOC -- the Doc file for COBOL-68/74 12B
          SRT4C.BWR  -- the Beware file for SORT 4C
          SRT4C.DOC  -- the Doc file for SORT 4C
          *.HLP      -- the Help files for COBOL and SORT etc.
          68274.DOC  -- the Doc file for the conversion utility
          KEYRMS.CBL -- the RMS example shown in appendix I

The COBOL-SOURCE save set contains all the source  files  required  to
build  both  COBOL-68  and  COBOL-74.   There is no need to load these
files onto the disk unless you want to rebuild the COBOL-68/74 system.
The building of the complete COBOL system requires about 10,000 blocks
of free disk space and about 1 hour of CPU time on a KL-10.

The SORT-SOURCE save set contains all the  source  files  required  to
build the stand alone SORT and the COBOL SORT.

The COBOL-68-K*-BUILD and COBOL-74-K*-BUILD  save  sets  contains  the
REL,  LOG,  UNV  files etc.  from the final build.  These files can be
used to rebuild the corresponding compiler if only minor changes  have
been made (i.e.  bug fixes) rather than a feature test switch change.
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                 Page 5


Similarly the SORT-K*-BUILD save sets contain the REL, LOG, UNV  files
etc.  from the final SORT build.

The CONVERSION-UTILITY save set contains the REL, LOG, UNV files  etc.
from  the  build  of the conversion utility (68274).  The files can be
used to rebuild the utility when bug fixes have been installed.

The UETP-DIRECTORY save set contains the UETP files that may  be  used
to test COBOL.  These may be copied to UTP:.
To run UETP, see  "Verification  of  the  standard  COBOL  system"  in
section 3.1 of this installation guide.
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                 Page 6


The following is a  general  description  of  the  COBOL-68/74  system
components  and  the classes of files on the distribution tape.  For a
specific list of the files associated with a  given  system  component
please refer to the control file for that component.

The components of the COBOL-68/74 system are:

     COBOL          the COBOL-68 compiler

     CBL74          the COBOL-74 compiler

     LIBOL          the COBOL-68 object time system

     C74OTS         the COBOL-74 object time system

     COBDDT         the debugger

     RERUN          the recovery system

     ISAM           ISAM utility program

     LIBARY         source library maintenance program

     SORT           Sort package

     DBMS-10*(1)    Data Base Management System

     MCS-10*(1)     Message Control System

In addition there are two new category C components:

     CPYLIB         the native mode LIBARY utility

     68274          the COBOL-68 to COBOL-74 conversion utility

     GPMSM          utility to merge two or more high segments



NOTE, both COBOL-68 and  COBOL-74  build  COBDDT,  ISAM,  LIBARY,  and
RERUN.   COBDDT,  LIBARY,  and RERUN are independent of COBOL-68/74 so
either method produces identical files.  ISAM contains part of the OTS
so  that  the  two  versions of ISAM have different checksums but will
behave the same.  For consistency it is recommended that the  COBOL-74
generated version be used.


---------------
*(1)  DBMS-10 and MCS-10 system components are not  included  in  this
distribution  area,  excepting  some  small support portions contained
within other of the system components.  In order to build and  install
a  system  supporting  one  or more of these unbundled products please
refer to the appropriate sections of this document in conjunction with
the  installation  instructions included with the individual unbundled
component distributions.
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                 Page 7


The following files or sets of files are included in the distribution:

     CBL12B.DOC Each component has a  documentation  section  in  this
               file.

     COBOL.INS This installation guide.

     *.HLP     Each component has a help text  file  for  use  by  the
               system HELP command.

     *.CTL     Each component has a control file which may be  run  to
               rebuild  the  given  component.   Refer to section 4 of
               this   document   for   general    system    rebuilding
               instructions and submission instructions.

     *.LOG     .LOG files recording the building  of  the  distributed
               system.

     *.EXE     The set of shareable files that compose the distributed
               ready to install system.

     *.MAP     LINK load maps for each component.

     *.MAC     MACRO source files.

     *.REL     Relocatable binary files.

     *.UNV     Universal files.

     COBOL.TEC File containing installation  specific  logical  names.
               This file is read by the COBOL CTL files.

     *.CMD     LINK indirect loading command files for the components.

     *.MEM     Other files containing useful information.
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                 Page 8


3.0  INSTALLATION OF THE COBOL SYSTEM

This section details the  procedure  for  installing  the  COBOL-68/74
system.  This procedure applies to the installation of systems rebuilt
to support one or more of the unbundled system components as  well  as
installation of the distributed form.

If it is not necessary to  support  DBMS-10,  MCS-10  or  any  of  the
special configurations described in section 4 only the files mentioned
in the remainder  of  this  section  need  to  be  obtained  from  the
distribution  tape.   If  one  or  more of the unbundled components or
special configurations is to be supported please refer to section 4 of
this  document  for  details  of  required  files  and  procedures for
restructuring the system before installation.   Instructions  for  the
installation  of the unbundled components themselves are included with
the unbundled distribution packages.


First restore the DOCUMENTATION save set to DSK:
Then read the DOC and BWR files.

To do this use the following procedure:

A.  Mount the COBOL distribution tape on MTA0:

B.  Type the following commands:

                R BACKUP
                TAPE MTA0:
                INTERCHANGE
                DENSITY 1600 or 800
                RESTORE *.*
                REWIND
                EXIT


To install COBOL use the following procedure:

A.  Mount the COBOL distribution tape on MTA0:

B.  Type the following commands:

First decide if you want KL-10 or KI-10 COBOL.

For COBOL-68
                R BACKUP
                TAPE MTA0:
                INTERCHANGE
                DENSITY 1600 or 800
                SKIP 3 (for KL-10) or 4 (for KI-10)
                RESTORE *.EXE, LIBOL.REL, COBDDT.REL
                REWIND
                EXIT

For COBOL-74
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                 Page 9


                R BACKUP
                TAPE MTA0:
                INTERCHANGE
                DENSITY 1600 or 800
                SKIP 5 (for KL-10) or 6 (for KI-10)
                RESTORE *.EXE, C74LIB.REL, COBDDT.REL
                REWIND
                EXIT

For SORT

                R BACKUP
                TAPE MTA0:
                INTERCHANGE
                DENSITY 1600 or 800
                SKIP 7 (for KL-10) or 8 (for KI-10)
                RESTORE *.EXE, *.REL
                REWIND
                EXIT


The entire installation can  then  be  accomplished  with  three  COPY
commands of the general form:

     .COPY SYS: = *.EXE, COBDDT.REL, LIBOL.REL,  C74LIB.REL
     .COPY DOC: = *.DOC
     .COPY HLP: = *.HLP
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                Page 10


3.1  Verification of the standard COBOL system.

You may use the UETP package to verify the installation  of  COBOL  if
you  use  the  standard  configuration (COBOL built with SORT).  To do
this, first copy the files from the UETP-DIRECTORY  save  set  on  the
installation  tape  to  the  system  UETP  area.  On your system, this
standard UETP area should be called UTP:.  Type the following commands
to  copy  the  necessary  files  from  the  tape  to  your system UETP
directory:  

               .R BACKUP
               BACKUP>TAPE MTA0:
               BACKUP>REWIND
               BACKUP>SKIP 10
               BACKUP>RESTORE UTP:=[*,*]*.*

The file UTP:UETP.DIR contains a list of the available tests that UETP
can run.  You may have to edit this file  and  insert  the  two  names
CBL74.VER  and CBLSRT.VER.  All the test names must be in alphabetical
order.


To run UETP, do the following:

               LOGIN as 1,2
               .RUN UTP:UETP

At this point, UETP should type a message similar to the following:

[18-Feb-81  9:26:32         User Environment Test Package ]
 
 
UETP>

If you get this far, you can "ENABLE" the test you  want  to  run  and
"BEGIN"  the running of the test.  For the COBOL-74 verification test,
type the following:

               UETP>ENABLE CBL74

               UETP>BEGIN 

If all goes well, these actions will have submitted  a  batch  control
file  called  CBL74.   Once  it  starts  running,  the  test should be
finished in a couple of minutes.

As the batch job is running, a few messages  should  be  sent  to  the
terminal  running  UETP.   You  can tell from these messages if all is
going well, or if there are problems with the execution of the test.

Every couple of minutes, you should type the "STATUS" command  to  see
how  the  job  is doing.  When it says "ended", you may type "EXIT" to
UETP.
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                Page 11


4.0  SYSTEM REBUILDING

This section details how to rebuild all or  part  of  the  COBOL-68/74
system  in  order  to  support DBMS-10, MCS-10, to change feature test
switch setting, or for maintenance purposes.

This tape contains common sources  for  both  COBOL-68  and  COBOL-74.
Which  version  is  generated  is  controlled  by  the  setting of two
mutually exclusive feature test switches in COBASM.  For COBOL-68  set
ANS68==1  and  ANS74==0.   For  COBOL-74  set  ANS68==0  and ANS74==1.
Although it is possible to build the two compilers in  the  same  area
(though  not  simultaneously)  it  is  recommended that separate build
areas be used and that the source  area  be  make  a  library  (device
LIB:).

To simplify the building task  BLDCBL.CTL  reads  the  COBOL.TEC  file
which  contains  definitions  of  all the logical names used.  If this
file exists BLDCBL uses it to modify all the CTL files to produce  CTM
files  which  it  then  submits.   This allows the installation to use
private  packs  and  different  disk  areas  for  the  build.   It  is
recommended  that  the  same  logical  names be used and that the user
should edit COBOL.TEC to contain appropriate  definitions.   Similarly
BLDSRT.CTL  reads  SORT.TEC  if  it  exists  to  produce SORT.CTM from
SORT.CTL.  Once the CTM files have been produced they can be submitted
for  all  future rebuilds providing, of course, that the logical names
do not change.  It is recommended that installations  modify  the  TEC
files  rather than the CTL files since Digital will most likely modify
the CTL files with each release.
The logical names used by the CTL files are:  SYS:, REL:, UNV:
Digital must use field-image software to build a  release  tape,  thus
the  supplied TEC files use the device DEC:.  In general installations
do not have this device, thus SYS:  should not be redefined.   If  you
have  devices  REL:   and UNV:  they also do not need to be redefined,
otherwise they must be ASSIGNed to SYS:

COBOL-68/74 version  12B  supports  the  following  user  installation
settable  feature assembly switches:  DEBUG, DBMS, DBMS4 (DBMS version
4 features) DBMS6 (DBMS version 6 features), MCS, BIS  (KL-10  central
processor),  and  ONESEG  (single  segment  compiler).  Other assembly
switches are  supported  only  in  their  distributed  position.   The
default setting for the DBMS, DBMS4 DBMS6, MCS, and BIS switches is ON
(1), and for DEBUG and ONESEG the default setting is  OFF  (0).   This
represents the standard default configuration.

The supported switches may be  turned  on  or  off  by  setting  their
symbols  equal  to  1 or 0 in the universal file COBASM and rebuilding
portions of the system according to the instructions in the  following
sections.   COBASM  is  the  assembly  switch  definition file for all
system components.  A symbol equal to 1 means  the  switch  is  on,  a
symbol equal to 0 means the switch is off.

Rebuilding requires that all of the distributed files be copied to the
appropriate  disk  areas.   If  a total rebuild is to be done then the
appropriate build area can be cleaned up by  deleting  all  LOG,  REL,
MAP, UNV, etc.  files leaving only the control files.
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                Page 12


4.1  Required System Software

In order to  rebuild  all  or  part  of  the  COBOL-68/74  system  the
following  standard system software is required, of the specified or a
later version.

     Software       Version
     --------       -------

     MACRO          53A(1152)
     LINK           4A(1220)
     MAKLIB         2A(67)
     CREF           53(53)
     GLOB           5B(127)
     UUOSYM.UNV     15(521)

COBOL-68/74 Version 12B will run under all supported monitors as  will
programs compiled with COBOL-68/74 version 12B.  
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                Page 13


4.2  Standard Configuration

The standard  distributed  configuration  contains  two  multi-segment
compilers  containing support for all DBMS-10 and MCS-10 syntax.  This
means that all of the reserved words for DBMS-10 and  MCS-10  will  be
present  in  the  standard  configuration  of COBOL-68/74 Version 12B.
This will eliminate  the  necessity  for  rebuilding  the  COBOL-68/74
compilers to get support for this unbundled component.

The standard distributed configuration also contains  an  object  time
system  and  a  series  of utility routines.  The standard distributed
configuration of the object time system includes full support for SORT
so  there  is  no  need  to run the SORT CTL file unless there are bug
fixes to apply to SORT.  The standard distributed configuration of the
object  time  system  does  not include support for DBMS-10 or MCS-10.
However rebuilding of the entire object time system is  not  required,
all  that  is  required  is  to  submit  additional  control  files as
specified in the appropriate section.

In general it is not  necessary  to  rebuild  the  entire  COBOL-68/74
system  in  order to configure systems supporting unbundled components
or to make patches to the existing system.  The instructions for  each
component  specify  any  dependencies  upon  the state of other system
components in order that no more of the system need  be  rebuilt  than
necessary.  The only general restriction is that none of the component
building control files may  be  executed  concurrently  and  that  the
compiler and OTS must be built first or the .UNV files from a previous
build must be available for the other components.  The following is  a
list  of each component of the standard configuration.  The list is in
the order in which the control files  for  each  component  should  be
submitted  if  all  components  are  being  built.  The list shows the
actual SUBMIT command which should be used for each control file,  and
as  long as the user is aware of the dependencies described, the order
of submitting them is not critical.  If you should wish to  build  the
whole  system,  just submit the file BLDCBL.CTL which will then submit
all the other .CTL/.CTM files in the  correct  order  with  dependency
counts.

Note that there is a "chicken and egg" problem with  trying  to  build
from scratch a COBOL OTS containing either or both SORT and DBMS.  The
problem is that the LIBOL CTL file could build a complete OTS  in  one
step  if  only  the  SORT  and/or DBMS CTL files had already been run.
However these control files require that  LIBOL  be  run  first.   The
correct procedure is to first run LIBOL as part of the general rebuild
(use BLDCBL).  The run SORT followed by DBMS.  Once the initial  build
has  taken  place only the control file for the piece that has changed
need be rerun providing, of course, that nothing in the build areas is
deleted.   Thus  if  a  bug is fixed in COBOL SORT there is no need to
rerun the LIBOL control file, just run the SORT one.   Currently  only
the LIBOL and SORT CTL files have been fixed to do this.  The DBMS CTL
files have not yet  been  fixed,  they  still  require  a  version  of
LIBOL.REL and C74LIB.REL not yet containing DBMS files.
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                Page 14


To build COBOL-68 and/or COBOL-74:

A.  Mount the COBOL distribution tape on logical MTA0:


B.  Type the following commands:


LOGIN to the COBOL-SOURCE area
                     REWIND MTA0:
                     R BACKUP
                     TAPE MTA0:
                     DENSITY 1600 or 800
                     INTERCHANGE
                     SKIP 1
                     RESTORE *.*
                     REWIND
                     EXIT

LOGIN to the COBOL-68-BUILD area
                     REWIND MTA0:
                     R BACKUP
                     TAPE MTA0:
                     DENSITY 1600 or 800
                     INTERCHANGE
                     SKIP 3 (for KL-10) or 4 (for KI-10)
                     RESTORE *.*
                     REWIND
                     EXIT

LOGIN to the COBOL-74-BUILD area
                     REWIND MTA0:
                     R BACKUP
                     TAPE MTA0:
                     DENSITY 1600 or 800
                     INTERCHANGE
                     SKIP 5 (for KL-10) or 6 (for KI-10)
                     RESTORE *.*
                     REWIND
                     EXIT

LOGIN to the SORT-BUILD area
                     REWIND MTA0:
                     R BACKUP
                     TAPE MTA0:
                     DENSITY 1600 or 800
                     INTERCHANGE
                     SKIP 7 (for KL-10) or 8 (for KI-10)
                     RESTORE *.*
                     REWIND
                     EXIT


COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                Page 15


C.  LOGIN to the appropriate COBOL-68-K*-BUILD or COBOL-74-K*-BUILD.
    Modify COBOL.TEC, 
    DELETE *.LOG, then SUBMIT the required files.


     a.  The whole system
            SUBMIT BLDCBL.CTL

         Note, in general the various CTL files will not run unless
         modified. BLDCBL does this when it is submitted, it reads the
         CTL files and produces CTM files which it then SUBMITs.
         Therefore to generate the individual components without
         SUBMITing BLDCBL one must SUBMIT the CTM file not the CTL
         file.

     b.  COMPILER
            SUBMIT COBOL.CTM/TIME:1:00:00/RESTART:YES
            Dependencies:  None

     c.  OTS
            SUBMIT LIBOL.CTM/TIME:0:30:00/RESTART:YES
            Dependencies:  None

     d.  COBDDT
            SUBMIT COBDDT.CTM
            Dependencies:  INTERM.UNV and COMUNI.UNV

     e.  ISAM
            SUBMIT ISAM.CTM

     f.  LIBARY
            SUBMIT LIBARY.CTM
            Dependencies:  None

     g.  RERUN
            SUBMIT RERUN.CTM
            Dependencies:  COMUNI.UNV, FTDEFS.UNV and LBLPRM.UNV

     h.  CPYLIB
            SUBMIT CPYLIB.CTM
            Dependencies:  None


NOTE, there will be no SORT in the OTS built by this procedure unless
the file SRTCBL.REL is in the SORT-BUILD area (this file is produced
by SORT.CTL).
See sec. 4.3.2 for instructions for installing SORT into the OTS.

Also there will be no DBMS support in the OTS built by this procedure
unless the file DBSCOB.REL is in the DBMS-BUILD area (this file is
produced by DBMS.CTL).
See sec. 4.3.1 for instructions for installing DBMS into the OTS.
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                Page 16


4.3  Non-Standard Configurations

The following sections  specify  what  rebuilding  of  the  system  is
required   in   order  to  produce  specialized  configurations.   The
instructions are divided by feature but they are easily combinable  to
provide  more  than  one of the capabilities.  Refer to the preceeding
section  for  specifics  when  instructed  to  rebuild   some   system
component.   Refer  to  the  preceeding  section  for  specifics  when
instructed to rebuild some system component.



4.3.1  DBMS-10

4.3.1.1  Completing support for DBMS-10

If you have a standard configuration Version 12B COBOL-68 or  COBOL-74
Compiler  (i.e.  the one on the distribution tape), all that is needed
to complete support for DBMS-10 is to follow these instructions:

     1.   Include a copy of LIBOL.REL and  LIBSHR.REL  (for  COBOL-68)
         and C74LIB.REL and C74SHR.REL (for COBOL-74) in the same disk
         area as the contents of the DBMS-10 distribution tape.

     2.  Refer to DBMS10.DOC for DBMS-10 installation instructions.

     3.  If you already have built DBMS and are just changing SORT  or
         LIBOL  then it is just sufficient to run the appropriate SORT
         or LIBOL CTL file.


4.3.1.2  Removing support for DBMS-10

The standard configuration of the COBOL-68 and COBOL-74 compilers come
complete  with  support for DBMS-10 , however, the object time systems
will not have DBMS-10 support.  This makes it much easier  to  install
DBMS-10  later.   However,  it does increase the size of the compilers
slightly and increases the number of reserved words.  If  you  do  not
want  any  DBMS-10 support in the compilers, it is possible to rebuild
the compilers turning off the DBMS, DBMS4 and  DBMS6  switches.   This
can be accomplished in the following manner:

     a.  Copy  the  contents  of  the  COBOL  distribution  tape  into
         appropriate disk areas.

     b.  Modify the universal file "COBASM.MAC" to include the  symbol
         definition "DBMS==0".

     c.  Rebuild the COBOL-68/74 compilers.

If you later wish to reinstitute support for DBMS-10 in the compilers,
follow  steps  a  and  c,  making sure that the symbol "DBMS" does not
appear in the universal file "COBASM.MAC".
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                Page 17


4.3.2  SORT

     a.  If COBOL-68, COBOL-74 and SORT are all being rebuilt  because
         of  major  changes  in  the  configuration,  then the correct
         procedure is to first submit BLDCBL.CTL for each compiler and
         when they are done, SORT.CTL.
         BLDCBL.CTL creates the files required by SORT.CTL to add  the
         SORT to LIBOL and C74OTS.
         On the other hand if a COBOL-68 or COBOL-74  OTS  exists  and
         only SORT has been modified then it is sufficient to run only
         SORT.CTL.
         Similarly if SORT exists (i.e.  SRTCBL.REL)  and  COBOL-68/74
         OTS  has been modified it is sufficient to run only LIBOL.CTL
         for each compiler.

     b.  SUBMIT SORT.CTL/TIME:0:30:00/RESTART:YES
         which will replace the  existing  SORT  module  in  the  OTSs
         (either  the original dummy one or an existing real one) with
         a newer real SORT.  It will  generate  modified  versions  of
         LIBOL.REL  and  C74LIB.REL.   It  will  try  to  RENAME these
         modified files back to the areas from which it originally got
         them  (note  both  the file and UFD protection must be set to
         allow this).  If, for any reason, this should fail they  will
         be  left in the SORT-BUILD area.  It will also build SORT.EXE
         which is the stand alone configuration.

     c.  Install the system in the normal fashion and in addition

             COPY SYS: = SORT.EXE
             COPY DOC: = SORT.DOC
             COPY HLP: = SORT.HLP



4.3.3  USER LIBOL ROUTINES

COBOL-68/74 includes a facility allowing installations  to  add  their
own  special purpose MACRO routines to LIBOL.REL and C74LIB.REL.  This
is accomplished via a dispatch routine, loaded with the  user  program
which  resolves  the  external  references  into  references to a user
dispatch table in the OTS.  For routines requiring low segment storage
there  is  a  user  dynamic  (indexed) low segment facility.  Refer to
USRDSP.MAC for complete instructions.

The user routines are added to LIBOL.REL and/or C74LIB.REL  after  all
other OTS rebuilding but before installation on SYS:.
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                Page 18


4.3.4  MCS

4.3.4.1  Completing support for MCS-10

If you have the standard configuration compilers (i.e.   the  ones  on
the  distribution  tape),  it  is  not necessary to rebuild any system
component, simply refer to the MCS-10 distribution package for  MCS-10
building and installation procedures.


4.3.4.2  Removing support for MCS-10

The standard configuration of the compilers come complete with support
for  MCS-10.   This  makes  it  much  easier  to install MCS-10 later,
however, it does increase the  size  of  the  compilers  slightly  and
increases the number of reserved words.  If you do not want any MCS-10
support in the compilers, it is  possible  to  rebuild  the  compilers
turning off the MCS switch.  This can be accomplished in the following
manner:

     a.  Copy  the  contents  of  the  COBOL  distribution  tape  into
         appropriate disk area.

     b.  Modify the universal file "COBASM.MAC" to include the  symbol
         definition MCS==0.

     c.  Rebuild the COBOL-68/74 compilers.

If you later wish to reinstitute support for MCS-10 in the  compilers,
follow  steps a and c, making sure that the symbol MCS does not appear
in the universal file "COBASM.MAC".
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                Page 19


4.3.5  KI-10 Processor Configuration

The compilers and OTSs  can  be  reconfigured  to  not  generate  KL10
Central  Processor  extended  instructions  and thus to run on a KI-10
cpu.

     a.  Modify the universal file COBASM.MAC to  include  the  symbol
         definition "BIS==0".

     b.  Rebuild the compilers.

     c.  Rebuild the OTSs.

     d.  Refer  to   section   3   for   COBOL   system   installation
         instructions.


4.3.6  Single Segment Compiler

It is possible to build a single segment compiler.  The compiler  will
require 110K to compile a minimal COBOL program.

     a.  Modify  COBASM.MAC   to   include   the   symbol   definition
         "ONESEG==1".

     b.  Rebuild the COBOL-68/74 compilers.

     c.  This will produce two single segment compilers consisting  of
         the files COBOL.EXE and CBL74.EXE which can be copied to SYS:
         instead of the multi-segment compiler configurations.

     d.  The remainder of  the  system  is  installed  in  the  normal
         fashion.


4.3.7  Shareable RMS and OTS

The normal method of using RMS is to have a shareable OTS and to merge
in  RMSCOB  at  run  time.   This results in each job that uses RMS in
having a non-shareable copy of RMSCOB.  If the majority  of  users  at
any  site  use  RMS this can result in a considerable waste of memory.
It is possible to build a high segment that contains both the OTS  and
RMSCOB, however then all users of COBOL-74 will get a larger OTS.

To do this use the program GPMSM which is on  the  DOCUMENTATION  save
set.
.R GPMSM
GPMSM>MERGE SYS:C74O12
GPMSM>MERGE SYS:RMSCOB
GPMSM>EXIT
.SSAVE C74O12

Then use this version of C74O12 in place of the original one.

COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                Page 20


5.0  COMPATABILITY OF COBOL-68 AND COBOL-74

     a.  In general COBOL-68 will not compile  COBOL-74  programs  and
         COBOL-74   will  not  compile  COBOL-68  programs.   For  the
         differences between COBOL-68 and COBOL-74 see :
         American National Standard COBOL ANSI X3.23-1974
         pages X1V-10 through X1V-32.
         or
         COBOL-74 Language Manual AA-5059A-TK plus AD-5059A-T1
         APPENDIX A

     b.  It is not possible to mix REL files produced by COBOL-68  and
         COBOL-74.

     c.  Data files - COBOL-68 and COBOL-74 are compatible.
COBOL-68/74 V12B ON TOPS-10: INSTALLATION GUIDE                Page 21


6.0  COBOL-68 TO COBOL-74 CONVERSION UTILITY

The COBOL-68 to COBOL-74 conversion utility, 68274,  is  just  another
version  of the COBOL-68 compiler.  See 68274.DOC for more details.  A
working version of the utility  is  in  the  BINARY  save  set.   This
version  is  re-built  just  like  any other non-standard version (see
section 4.3).  Specifically:

     a.  Copy  the  contents  of  the  COBOL  distribution  tape  into
         appropriate disk areas.

     b.  Modify the universal file "COBASM.MAC" to include the  symbol
         definitions ANS68==1 and FT68274==1.

     c.  Run COBOL.CTL to rebuild the conversion utility.

         Note, the simplest way to do this is to copy a COBOL.CTM file
         from  the  COBOL-68  build  area  and  use  it.  That way the
         logical names will all be setup correctly.

There is a HELP file and a DOC file in the DOCUMENTATION save set.



[END of COBOL.INS]
**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



                * * * L P T S P L  R u n  L o g * * *


12:04:44 LPDAT  LPTSPL version 105(4043)        VNW
12:04:44 LPDAT  Job COBOL sequence #56 on Printer 0 at 14-Oct-99 12:04:44
12:04:44 LPDAT  Output to device LPT000 unit type LP05 
12:05:36 LPMSG  Starting File DSKB:COBOL.INS[1,2]
12:05:36 LPMSG  Finished File DSKB:COBOL.INS[1,2]
12:05:36 LPEND  Summary:   21 Pages of Output
12:05:36 LPEND             55 Disk Blocks Read



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011111111112222222222333333333344444444445555555555666666666677777777778
12345678901234567890123456789012345678901234567890123456789012345678901234567890
**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 



**END** Job COBOL Req #8 for OPERATOR [1,2]    Date 14-Oct-99 12:05:36 Monitor: 




00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011111111112222222222333333333344444444445555555555666666666677777777778
12345678901234567890123456789012345678901234567890123456789012345678901234567890
